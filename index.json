{
  "api/CG.DataProtection.DataProtector.html": {
    "href": "api/CG.DataProtection.DataProtector.html",
    "title": "Class DataProtector",
    "keywords": "Class DataProtector This class is a singleton implementation of the Microsoft.AspNetCore.DataProtection.IDataProtector interface. Inheritance System.Object CG.SingletonBase < DataProtector > DataProtector Implements Microsoft.AspNetCore.DataProtection.IDataProtector Microsoft.AspNetCore.DataProtection.IDataProtectionProvider Inherited Members CG.SingletonBase<CG.DataProtection.DataProtector>.Instance() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.DataProtection Assembly : CG.DataProtection.dll Syntax public class DataProtector : SingletonBase<DataProtector>, IDataProtector, IDataProtectionProvider Remarks Use this class in non-DI environments, and/or, for local data protection scenarios. Properties Protector This property contains a reference to a local data protector. Declaration protected IDataProtector Protector { get; } Property Value Type Description Microsoft.AspNetCore.DataProtection.IDataProtector Provider This property contains a reference to a local data protection provider. Declaration protected IDataProtectionProvider Provider { get; } Property Value Type Description Microsoft.AspNetCore.DataProtection.IDataProtectionProvider Methods CreateProtector(String) This method creates an Microsoft.AspNetCore.DataProtection.IDataProtector for a given purpose. Declaration public IDataProtector CreateProtector(string purpose) Parameters Type Name Description System.String purpose The purpose to be assigned to the newly-created Microsoft.AspNetCore.DataProtection.IDataProtector object. Returns Type Description Microsoft.AspNetCore.DataProtection.IDataProtector An Microsoft.AspNetCore.DataProtection.IDataProtector tied to the provided purpose. Protect(Byte[]) This method cryptographically protects a piece of plaintext data. Declaration public byte[] Protect(byte[] plaintext) Parameters Type Name Description System.Byte [] plaintext The plaintext string to protect. Returns Type Description System.Byte [] The protected form of the plaintext data. Unprotect(Byte[]) This method cryptographically unprotects a piece of protected data. Declaration public byte[] Unprotect(byte[] protectedData) Parameters Type Name Description System.Byte [] protectedData The protected data to unprotect. Returns Type Description System.Byte [] The plaintext form of the protected data. Implements Microsoft.AspNetCore.DataProtection.IDataProtector Microsoft.AspNetCore.DataProtection.IDataProtectionProvider Extension Methods DataProtectorExtensions.ProtectProperties(IDataProtector, Object) DataProtectorExtensions.UnprotectProperties(IDataProtector, Object)"
  },
  "api/CG.DataProtection.html": {
    "href": "api/CG.DataProtection.html",
    "title": "Namespace CG.DataProtection",
    "keywords": "Namespace CG.DataProtection Classes DataProtector This class is a singleton implementation of the Microsoft.AspNetCore.DataProtection.IDataProtector interface. ProtectedPropertyAttribute This class represents an encrypted option property. ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/CG.DataProtection.ProtectedPropertyAttribute.html": {
    "href": "api/CG.DataProtection.ProtectedPropertyAttribute.html",
    "title": "Class ProtectedPropertyAttribute",
    "keywords": "Class ProtectedPropertyAttribute This class represents an encrypted option property. Inheritance System.Object System.Attribute ProtectedPropertyAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.DataProtection Assembly : CG.DataProtection.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class ProtectedPropertyAttribute : Attribute"
  },
  "api/CG.DataProtection.ServiceCollectionExtensions.html": {
    "href": "api/CG.DataProtection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.DataProtection Assembly : CG.DataProtection.dll Syntax public static class ServiceCollectionExtensions Methods TryConfigureOptions<TOptions>(IServiceCollection, IDataProtector, IConfiguration) This method attempts to configure the specified TOptions object as a singleton service. Declaration public static bool TryConfigureOptions<TOptions>(this IServiceCollection serviceCollection, IDataProtector dataProtector, IConfiguration configuration) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.AspNetCore.DataProtection.IDataProtector dataProtector The data protector to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description System.Boolean True if the options were configured; false otherwise. Type Parameters Name Description TOptions The type of associated options. Remarks In addition to binding the propeties of the TOptions instance to the configuration, and validating the results, this method also unprotects any decorated properties on the TOptions object. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more of the required parameters is missing or invalid. TryConfigureOptions<TOptions>(IServiceCollection, IDataProtector, IConfiguration, out TOptions) This method attempts to configure the specified TOptions object as a singleton service. Declaration public static bool TryConfigureOptions<TOptions>(this IServiceCollection serviceCollection, IDataProtector dataProtector, IConfiguration configuration, out TOptions options) where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.AspNetCore.DataProtection.IDataProtector dataProtector The data protector to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. TOptions options The options that were created by the operation. Returns Type Description System.Boolean True if the options were configured; false otherwise. Type Parameters Name Description TOptions The type of associated options. Remarks In addition to binding the propeties of the TOptions instance to the configuration, and validating the results, this method also unprotects any decorated properties on the TOptions object. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more of the required parameters is missing or invalid."
  },
  "api/Microsoft.AspNetCore.DataProtection.DataProtectorExtensions.html": {
    "href": "api/Microsoft.AspNetCore.DataProtection.DataProtectorExtensions.html",
    "title": "Class DataProtectorExtensions",
    "keywords": "Class DataProtectorExtensions This class contains extension methods related to the Microsoft.AspNetCore.DataProtection.IDataProtector type. Inheritance System.Object DataProtectorExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.DataProtection Assembly : CG.DataProtection.dll Syntax public static class DataProtectorExtensions Methods ProtectProperties(IDataProtector, Object) This method encrypts the value of any properties on the specified options object that are: (1) decorated with a ProtectedPropertyAttribute attribute, (2) are of type: string, and (3) have a value in them. Declaration public static IDataProtector ProtectProperties(this IDataProtector dataProtector, object options) Parameters Type Name Description Microsoft.AspNetCore.DataProtection.IDataProtector dataProtector The data protector object to use for the operation. System.Object options The options object to use for the operation. Returns Type Description Microsoft.AspNetCore.DataProtection.IDataProtector The value of the dataProtector parameter, for chaining calls together. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more of the required parameters is missing or invalid. System.InvalidOperationException This exception is thrown whenever the underlying cryptography operation fails, for any reason. UnprotectProperties(IDataProtector, Object) This method decrypts the value of any properties on the specified options object that: (1) are decorated with a ProtectedPropertyAttribute attribute, (2) are of type: string, and (3) have a value in them. Declaration public static IDataProtector UnprotectProperties(this IDataProtector dataProtector, object options) Parameters Type Name Description Microsoft.AspNetCore.DataProtection.IDataProtector dataProtector The data protector object to use for the operation. System.Object options The options object to use for the operation. Returns Type Description Microsoft.AspNetCore.DataProtection.IDataProtector The value of the dataProtector parameter, for chaining calls together. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more of the required parameters is missing or invalid. System.InvalidOperationException This exception is thrown whenever the underlying cryptography operation fails, for any reason."
  },
  "api/Microsoft.AspNetCore.DataProtection.html": {
    "href": "api/Microsoft.AspNetCore.DataProtection.html",
    "title": "Namespace Microsoft.AspNetCore.DataProtection",
    "keywords": "Namespace Microsoft.AspNetCore.DataProtection Classes DataProtectorExtensions This class contains extension methods related to the Microsoft.AspNetCore.DataProtection.IDataProtector type."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.DataProtection.dll contains data protection extensions used by other CodeGator packages."
  }
}